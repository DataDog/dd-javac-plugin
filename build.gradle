import org.gradle.internal.jvm.Jvm

plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.0.0"
    id "net.researchgate.release" version "3.0.2"
}

allprojects {
    group "com.datadoghq"
    version "$version"

    apply plugin: "java-library"
    apply plugin: "maven-publish"
    apply plugin: "signing"

    java {
        withJavadocJar()
        withSourcesJar()
    }

    test {
        useJUnitPlatform()
    }

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
    }

    publishing {
        publications {
            maven(MavenPublication) { MavenPublication publication ->
                publication.from components.java
            }
        }
    }

    signing {
        useInMemoryPgpKeys(System.getenv("GPG_PRIVATE_KEY"), System.getenv("GPG_PASSWORD"))
        sign publishing.publications.maven
    }

    tasks.withType(GenerateMavenPom).configureEach {
        doFirst {
            MavenPom pom = it.pom
            pom.name = project.name
            pom.description = project.description
            pom.packaging = "jar"
            pom.url = "https://github.com/datadog/dd-javac-plugin"
            pom.licenses {
                license {
                    name = "The Apache Software License, Version 2.0"
                    url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    distribution = "repo"
                }
            }
            pom.scm {
                connection = "scm:https://datadog@github.com/datadog/dd-javac-plugin"
                developerConnection = "scm:git@github.com:datadog/dd-javac-plugin.git"
                url = "https://github.com/datadog/dd-javac-plugin"
            }
            pom.developers {
                developer {
                    id = "datadog"
                    name = "Datadog"
                }
            }
        }
    }
}

description = "Datadog Java Compiler Plugin"

def launcher8 = javaToolchains.launcherFor { languageVersion.set(JavaLanguageVersion.of(8)) }
def javaHome8 = launcher8.map { it.metadata.installationPath.asFile }
def jvm8 = Jvm.forHome(javaHome8.get())

dependencies {
    implementation files(jvm8.toolsJar)

    api project(":dd-javac-plugin-client")
    api "org.burningwave:core:12.62.7"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.2"
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testImplementation 'commons-io:commons-io:2.11.0'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.2"
}

apply from: "$rootDir/gradle/multi-release.gradle"
apply from: "$rootDir/gradle/publishing.gradle"
