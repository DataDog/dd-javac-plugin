release {
    git {
        requireBranch.set('master')
    }
}

gradle.taskGraph.whenReady { TaskExecutionGraph taskGraph ->
    if (taskGraph.hasTask("publishToSonatype")) {
        assert System.getenv("SONATYPE_USER") != null
        assert System.getenv("SONATYPE_PASS") != null

        assert System.getenv("GPG_PRIVATE_KEY") != null
        assert System.getenv("GPG_PASSWORD") != null
    }
}

nexusPublishing {
    repositories {
        if (project.hasProperty("forceLocal")) {
            local {
                // For testing use with https://hub.docker.com/r/sonatype/nexus
                // docker run --rm -d -p 8081:8081 --name nexus sonatype/nexus
                // Doesn't work for testing releases due to staging
                nexusUrl = uri("http://localhost:8081/nexus/content/repositories/releases/")
                snapshotRepositoryUrl = uri("http://localhost:8081/nexus/content/repositories/snapshots/")

                username = "admin"
                password = "admin123"

                allowInsecureProtocol = true
            }
        } else {
            // see https://github.com/gradle-nexus/publish-plugin#publishing-to-maven-central-via-sonatype-central
            // For official documentation:
            // staging repo publishing https://central.sonatype.org/publish/publish-portal-ossrh-staging-api/#configuration
            // snapshot publishing https://central.sonatype.org/publish/publish-portal-snapshots/#publishing-via-other-methods
            sonatype {
                nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
                snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))
                username = System.getenv("SONATYPE_USER")
                password = System.getenv("SONATYPE_PASS")
            }
        }
    }
}
